// <auto-generated>
/*
 * Hydrus Client API
 *
 * API for interacting with the Hydrus Client
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using HydrusAPI.NET.Client;

namespace HydrusAPI.NET.Model
{
    /// <summary>
    /// ManageCookiesSetCookies200Response
    /// </summary>
    public partial class ManageCookiesSetCookies200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManageCookiesSetCookies200Response" /> class.
        /// </summary>
        /// <param name="varVersion">The version of the Client API.</param>
        /// <param name="hydrusVersion">The version of the Client hosting the API.</param>
        [JsonConstructor]
        public ManageCookiesSetCookies200Response(Option<int?> varVersion = default, Option<int?> hydrusVersion = default)
        {
            VarVersionOption = varVersion;
            HydrusVersionOption = hydrusVersion;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of VarVersion
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> VarVersionOption { get; private set; }

        /// <summary>
        /// The version of the Client API.
        /// </summary>
        /// <value>The version of the Client API.</value>
        [JsonPropertyName("version")]
        public int? VarVersion { get { return this.VarVersionOption; } set { this.VarVersionOption = new(value); } }

        /// <summary>
        /// Used to track the state of HydrusVersion
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> HydrusVersionOption { get; private set; }

        /// <summary>
        /// The version of the Client hosting the API.
        /// </summary>
        /// <value>The version of the Client hosting the API.</value>
        [JsonPropertyName("hydrus_version")]
        public int? HydrusVersion { get { return this.HydrusVersionOption; } set { this.HydrusVersionOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManageCookiesSetCookies200Response {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  HydrusVersion: ").Append(HydrusVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="ManageCookiesSetCookies200Response" />
    /// </summary>
    public class ManageCookiesSetCookies200ResponseJsonConverter : JsonConverter<ManageCookiesSetCookies200Response>
    {
        /// <summary>
        /// Deserializes json to <see cref="ManageCookiesSetCookies200Response" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override ManageCookiesSetCookies200Response Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<int?> varVersion = default;
            Option<int?> hydrusVersion = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "version":
                            varVersion = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "hydrus_version":
                            hydrusVersion = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (varVersion.IsSet && varVersion.Value == null)
                throw new ArgumentNullException(nameof(varVersion), "Property is not nullable for class ManageCookiesSetCookies200Response.");

            if (hydrusVersion.IsSet && hydrusVersion.Value == null)
                throw new ArgumentNullException(nameof(hydrusVersion), "Property is not nullable for class ManageCookiesSetCookies200Response.");

            return new ManageCookiesSetCookies200Response(varVersion, hydrusVersion);
        }

        /// <summary>
        /// Serializes a <see cref="ManageCookiesSetCookies200Response" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="manageCookiesSetCookies200Response"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, ManageCookiesSetCookies200Response manageCookiesSetCookies200Response, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, manageCookiesSetCookies200Response, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="ManageCookiesSetCookies200Response" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="manageCookiesSetCookies200Response"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, ManageCookiesSetCookies200Response manageCookiesSetCookies200Response, JsonSerializerOptions jsonSerializerOptions)
        {
            if (manageCookiesSetCookies200Response.VarVersionOption.IsSet)
                writer.WriteNumber("version", manageCookiesSetCookies200Response.VarVersionOption.Value!.Value);

            if (manageCookiesSetCookies200Response.HydrusVersionOption.IsSet)
                writer.WriteNumber("hydrus_version", manageCookiesSetCookies200Response.HydrusVersionOption.Value!.Value);
        }
    }

    /// <summary>
    /// The ManageCookiesSetCookies200ResponseSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(ManageCookiesSetCookies200Response))]
    public partial class ManageCookiesSetCookies200ResponseSerializationContext : JsonSerializerContext { }
}
