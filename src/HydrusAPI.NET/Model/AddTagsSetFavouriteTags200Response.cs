// <auto-generated>
/*
 * Hydrus Client API
 *
 * API for interacting with the Hydrus Client
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using HydrusAPI.NET.Client;

namespace HydrusAPI.NET.Model
{
    /// <summary>
    /// AddTagsSetFavouriteTags200Response
    /// </summary>
    public partial class AddTagsSetFavouriteTags200Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddTagsSetFavouriteTags200Response" /> class.
        /// </summary>
        /// <param name="varVersion">The version of the Hydrus Client API.</param>
        /// <param name="hydrusVersion">The version of the Hydrus software running the API.</param>
        /// <param name="favouriteTags">The updated list of favourite tags.</param>
        [JsonConstructor]
        public AddTagsSetFavouriteTags200Response(Option<int?> varVersion = default, Option<int?> hydrusVersion = default, Option<List<string>?> favouriteTags = default)
        {
            VarVersionOption = varVersion;
            HydrusVersionOption = hydrusVersion;
            FavouriteTagsOption = favouriteTags;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of VarVersion
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> VarVersionOption { get; private set; }

        /// <summary>
        /// The version of the Hydrus Client API.
        /// </summary>
        /// <value>The version of the Hydrus Client API.</value>
        [JsonPropertyName("version")]
        public int? VarVersion { get { return this.VarVersionOption; } set { this.VarVersionOption = new(value); } }

        /// <summary>
        /// Used to track the state of HydrusVersion
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> HydrusVersionOption { get; private set; }

        /// <summary>
        /// The version of the Hydrus software running the API.
        /// </summary>
        /// <value>The version of the Hydrus software running the API.</value>
        [JsonPropertyName("hydrus_version")]
        public int? HydrusVersion { get { return this.HydrusVersionOption; } set { this.HydrusVersionOption = new(value); } }

        /// <summary>
        /// Used to track the state of FavouriteTags
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<string>?> FavouriteTagsOption { get; private set; }

        /// <summary>
        /// The updated list of favourite tags.
        /// </summary>
        /// <value>The updated list of favourite tags.</value>
        [JsonPropertyName("favourite_tags")]
        public List<string>? FavouriteTags { get { return this.FavouriteTagsOption; } set { this.FavouriteTagsOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AddTagsSetFavouriteTags200Response {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  HydrusVersion: ").Append(HydrusVersion).Append("\n");
            sb.Append("  FavouriteTags: ").Append(FavouriteTags).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AddTagsSetFavouriteTags200Response" />
    /// </summary>
    public class AddTagsSetFavouriteTags200ResponseJsonConverter : JsonConverter<AddTagsSetFavouriteTags200Response>
    {
        /// <summary>
        /// Deserializes json to <see cref="AddTagsSetFavouriteTags200Response" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override AddTagsSetFavouriteTags200Response Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<int?> varVersion = default;
            Option<int?> hydrusVersion = default;
            Option<List<string>?> favouriteTags = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "version":
                            varVersion = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "hydrus_version":
                            hydrusVersion = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "favourite_tags":
                            favouriteTags = new Option<List<string>?>(JsonSerializer.Deserialize<List<string>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (varVersion.IsSet && varVersion.Value == null)
                throw new ArgumentNullException(nameof(varVersion), "Property is not nullable for class AddTagsSetFavouriteTags200Response.");

            if (hydrusVersion.IsSet && hydrusVersion.Value == null)
                throw new ArgumentNullException(nameof(hydrusVersion), "Property is not nullable for class AddTagsSetFavouriteTags200Response.");

            if (favouriteTags.IsSet && favouriteTags.Value == null)
                throw new ArgumentNullException(nameof(favouriteTags), "Property is not nullable for class AddTagsSetFavouriteTags200Response.");

            return new AddTagsSetFavouriteTags200Response(varVersion, hydrusVersion, favouriteTags);
        }

        /// <summary>
        /// Serializes a <see cref="AddTagsSetFavouriteTags200Response" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="addTagsSetFavouriteTags200Response"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, AddTagsSetFavouriteTags200Response addTagsSetFavouriteTags200Response, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, addTagsSetFavouriteTags200Response, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="AddTagsSetFavouriteTags200Response" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="addTagsSetFavouriteTags200Response"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, AddTagsSetFavouriteTags200Response addTagsSetFavouriteTags200Response, JsonSerializerOptions jsonSerializerOptions)
        {
            if (addTagsSetFavouriteTags200Response.FavouriteTagsOption.IsSet && addTagsSetFavouriteTags200Response.FavouriteTags == null)
                throw new ArgumentNullException(nameof(addTagsSetFavouriteTags200Response.FavouriteTags), "Property is required for class AddTagsSetFavouriteTags200Response.");

            if (addTagsSetFavouriteTags200Response.VarVersionOption.IsSet)
                writer.WriteNumber("version", addTagsSetFavouriteTags200Response.VarVersionOption.Value!.Value);

            if (addTagsSetFavouriteTags200Response.HydrusVersionOption.IsSet)
                writer.WriteNumber("hydrus_version", addTagsSetFavouriteTags200Response.HydrusVersionOption.Value!.Value);

            if (addTagsSetFavouriteTags200Response.FavouriteTagsOption.IsSet)
            {
                writer.WritePropertyName("favourite_tags");
                JsonSerializer.Serialize(writer, addTagsSetFavouriteTags200Response.FavouriteTags, jsonSerializerOptions);
            }
        }
    }

    /// <summary>
    /// The AddTagsSetFavouriteTags200ResponseSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(AddTagsSetFavouriteTags200Response))]
    public partial class AddTagsSetFavouriteTags200ResponseSerializationContext : JsonSerializerContext { }
}
