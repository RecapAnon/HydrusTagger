// <auto-generated>
/*
 * Hydrus Client API
 *
 * API for interacting with the Hydrus Client
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using HydrusAPI.NET.Client;

namespace HydrusAPI.NET.Model
{
    /// <summary>
    /// EditRatingsSetRatingRequestRating
    /// </summary>
    public partial class EditRatingsSetRatingRequestRating : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EditRatingsSetRatingRequestRating" /> class.
        /// </summary>
        /// <param name="bool"></param>
        internal EditRatingsSetRatingRequestRating(bool @bool)
        {
            Bool = @bool;
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="EditRatingsSetRatingRequestRating" /> class.
        /// </summary>
        /// <param name="int"></param>
        internal EditRatingsSetRatingRequestRating(int @int)
        {
            Int = @int;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Boolean value for Like/Dislike ratings.
        /// </summary>
        /// <value>Boolean value for Like/Dislike ratings.</value>
        public bool? Bool { get; set; }

        /// <summary>
        /// Integer value for Numerical or Inc/Dec ratings.
        /// </summary>
        /// <value>Integer value for Numerical or Inc/Dec ratings.</value>
        public int? Int { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EditRatingsSetRatingRequestRating {\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="EditRatingsSetRatingRequestRating" />
    /// </summary>
    public class EditRatingsSetRatingRequestRatingJsonConverter : JsonConverter<EditRatingsSetRatingRequestRating>
    {
        /// <summary>
        /// Deserializes json to <see cref="EditRatingsSetRatingRequestRating" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override EditRatingsSetRatingRequestRating Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            bool? varBool = default;
            int? varInt = default;

            Utf8JsonReader utf8JsonReaderOneOf = utf8JsonReader;
            while (utf8JsonReaderOneOf.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderOneOf.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderOneOf.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderOneOf.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderOneOf.CurrentDepth)
                    break;

                if (utf8JsonReaderOneOf.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderOneOf.CurrentDepth - 1)
                {
                    Utf8JsonReader utf8JsonReaderBool = utf8JsonReader;
                    ClientUtils.TryDeserialize<bool?>(ref utf8JsonReaderBool, jsonSerializerOptions, out varBool);

                    Utf8JsonReader utf8JsonReaderInt = utf8JsonReader;
                    ClientUtils.TryDeserialize<int?>(ref utf8JsonReaderInt, jsonSerializerOptions, out varInt);
                }
            }

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        default:
                            break;
                    }
                }
            }

            if (varBool != null)
                return new EditRatingsSetRatingRequestRating(varBool.Value);

            if (varInt != null)
                return new EditRatingsSetRatingRequestRating(varInt.Value);

            throw new JsonException();
        }

        /// <summary>
        /// Serializes a <see cref="EditRatingsSetRatingRequestRating" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="editRatingsSetRatingRequestRating"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, EditRatingsSetRatingRequestRating editRatingsSetRatingRequestRating, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, editRatingsSetRatingRequestRating, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="EditRatingsSetRatingRequestRating" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="editRatingsSetRatingRequestRating"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, EditRatingsSetRatingRequestRating editRatingsSetRatingRequestRating, JsonSerializerOptions jsonSerializerOptions)
        {

        }
    }

    /// <summary>
    /// The EditRatingsSetRatingRequestRatingSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(EditRatingsSetRatingRequestRating))]
    public partial class EditRatingsSetRatingRequestRatingSerializationContext : JsonSerializerContext { }
}
