// <auto-generated>
/*
 * Hydrus Client API
 *
 * API for interacting with the Hydrus Client
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using HydrusAPI.NET.Client;

namespace HydrusAPI.NET.Model
{
    /// <summary>
    /// ManageDatabaseMrBones200ResponseBonedStats
    /// </summary>
    public partial class ManageDatabaseMrBones200ResponseBonedStats : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManageDatabaseMrBones200ResponseBonedStats" /> class.
        /// </summary>
        /// <param name="numInbox">numInbox</param>
        /// <param name="numArchive">numArchive</param>
        /// <param name="numDeleted">numDeleted</param>
        /// <param name="sizeInbox">sizeInbox</param>
        /// <param name="sizeArchive">sizeArchive</param>
        /// <param name="sizeDeleted">sizeDeleted</param>
        /// <param name="earliestImportTime">earliestImportTime</param>
        /// <param name="totalViewtime">totalViewtime</param>
        /// <param name="totalAlternateFiles">totalAlternateFiles</param>
        /// <param name="totalAlternateGroups">totalAlternateGroups</param>
        /// <param name="totalDuplicateFiles">totalDuplicateFiles</param>
        /// <param name="totalPotentialPairs">totalPotentialPairs</param>
        [JsonConstructor]
        public ManageDatabaseMrBones200ResponseBonedStats(Option<int?> numInbox = default, Option<int?> numArchive = default, Option<int?> numDeleted = default, Option<int?> sizeInbox = default, Option<int?> sizeArchive = default, Option<int?> sizeDeleted = default, Option<int?> earliestImportTime = default, Option<List<int>?> totalViewtime = default, Option<int?> totalAlternateFiles = default, Option<int?> totalAlternateGroups = default, Option<int?> totalDuplicateFiles = default, Option<int?> totalPotentialPairs = default)
        {
            NumInboxOption = numInbox;
            NumArchiveOption = numArchive;
            NumDeletedOption = numDeleted;
            SizeInboxOption = sizeInbox;
            SizeArchiveOption = sizeArchive;
            SizeDeletedOption = sizeDeleted;
            EarliestImportTimeOption = earliestImportTime;
            TotalViewtimeOption = totalViewtime;
            TotalAlternateFilesOption = totalAlternateFiles;
            TotalAlternateGroupsOption = totalAlternateGroups;
            TotalDuplicateFilesOption = totalDuplicateFiles;
            TotalPotentialPairsOption = totalPotentialPairs;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of NumInbox
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> NumInboxOption { get; private set; }

        /// <summary>
        /// Gets or Sets NumInbox
        /// </summary>
        /* <example>8356</example> */
        [JsonPropertyName("num_inbox")]
        public int? NumInbox { get { return this.NumInboxOption; } set { this.NumInboxOption = new(value); } }

        /// <summary>
        /// Used to track the state of NumArchive
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> NumArchiveOption { get; private set; }

        /// <summary>
        /// Gets or Sets NumArchive
        /// </summary>
        /* <example>229</example> */
        [JsonPropertyName("num_archive")]
        public int? NumArchive { get { return this.NumArchiveOption; } set { this.NumArchiveOption = new(value); } }

        /// <summary>
        /// Used to track the state of NumDeleted
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> NumDeletedOption { get; private set; }

        /// <summary>
        /// Gets or Sets NumDeleted
        /// </summary>
        /* <example>7010</example> */
        [JsonPropertyName("num_deleted")]
        public int? NumDeleted { get { return this.NumDeletedOption; } set { this.NumDeletedOption = new(value); } }

        /// <summary>
        /// Used to track the state of SizeInbox
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> SizeInboxOption { get; private set; }

        /// <summary>
        /// Gets or Sets SizeInbox
        /// </summary>
        /* <example>7052596762</example> */
        [JsonPropertyName("size_inbox")]
        public int? SizeInbox { get { return this.SizeInboxOption; } set { this.SizeInboxOption = new(value); } }

        /// <summary>
        /// Used to track the state of SizeArchive
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> SizeArchiveOption { get; private set; }

        /// <summary>
        /// Gets or Sets SizeArchive
        /// </summary>
        /* <example>262911007</example> */
        [JsonPropertyName("size_archive")]
        public int? SizeArchive { get { return this.SizeArchiveOption; } set { this.SizeArchiveOption = new(value); } }

        /// <summary>
        /// Used to track the state of SizeDeleted
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> SizeDeletedOption { get; private set; }

        /// <summary>
        /// Gets or Sets SizeDeleted
        /// </summary>
        /* <example>13742290193</example> */
        [JsonPropertyName("size_deleted")]
        public int? SizeDeleted { get { return this.SizeDeletedOption; } set { this.SizeDeletedOption = new(value); } }

        /// <summary>
        /// Used to track the state of EarliestImportTime
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> EarliestImportTimeOption { get; private set; }

        /// <summary>
        /// Gets or Sets EarliestImportTime
        /// </summary>
        /* <example>1451408539</example> */
        [JsonPropertyName("earliest_import_time")]
        public int? EarliestImportTime { get { return this.EarliestImportTimeOption; } set { this.EarliestImportTimeOption = new(value); } }

        /// <summary>
        /// Used to track the state of TotalViewtime
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<int>?> TotalViewtimeOption { get; private set; }

        /// <summary>
        /// Gets or Sets TotalViewtime
        /// </summary>
        /* <example>[3280,41621,2932,83021]</example> */
        [JsonPropertyName("total_viewtime")]
        public List<int>? TotalViewtime { get { return this.TotalViewtimeOption; } set { this.TotalViewtimeOption = new(value); } }

        /// <summary>
        /// Used to track the state of TotalAlternateFiles
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> TotalAlternateFilesOption { get; private set; }

        /// <summary>
        /// Gets or Sets TotalAlternateFiles
        /// </summary>
        /* <example>265</example> */
        [JsonPropertyName("total_alternate_files")]
        public int? TotalAlternateFiles { get { return this.TotalAlternateFilesOption; } set { this.TotalAlternateFilesOption = new(value); } }

        /// <summary>
        /// Used to track the state of TotalAlternateGroups
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> TotalAlternateGroupsOption { get; private set; }

        /// <summary>
        /// Gets or Sets TotalAlternateGroups
        /// </summary>
        /* <example>63</example> */
        [JsonPropertyName("total_alternate_groups")]
        public int? TotalAlternateGroups { get { return this.TotalAlternateGroupsOption; } set { this.TotalAlternateGroupsOption = new(value); } }

        /// <summary>
        /// Used to track the state of TotalDuplicateFiles
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> TotalDuplicateFilesOption { get; private set; }

        /// <summary>
        /// Gets or Sets TotalDuplicateFiles
        /// </summary>
        /* <example>125</example> */
        [JsonPropertyName("total_duplicate_files")]
        public int? TotalDuplicateFiles { get { return this.TotalDuplicateFilesOption; } set { this.TotalDuplicateFilesOption = new(value); } }

        /// <summary>
        /// Used to track the state of TotalPotentialPairs
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> TotalPotentialPairsOption { get; private set; }

        /// <summary>
        /// Gets or Sets TotalPotentialPairs
        /// </summary>
        /* <example>3252</example> */
        [JsonPropertyName("total_potential_pairs")]
        public int? TotalPotentialPairs { get { return this.TotalPotentialPairsOption; } set { this.TotalPotentialPairsOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManageDatabaseMrBones200ResponseBonedStats {\n");
            sb.Append("  NumInbox: ").Append(NumInbox).Append("\n");
            sb.Append("  NumArchive: ").Append(NumArchive).Append("\n");
            sb.Append("  NumDeleted: ").Append(NumDeleted).Append("\n");
            sb.Append("  SizeInbox: ").Append(SizeInbox).Append("\n");
            sb.Append("  SizeArchive: ").Append(SizeArchive).Append("\n");
            sb.Append("  SizeDeleted: ").Append(SizeDeleted).Append("\n");
            sb.Append("  EarliestImportTime: ").Append(EarliestImportTime).Append("\n");
            sb.Append("  TotalViewtime: ").Append(TotalViewtime).Append("\n");
            sb.Append("  TotalAlternateFiles: ").Append(TotalAlternateFiles).Append("\n");
            sb.Append("  TotalAlternateGroups: ").Append(TotalAlternateGroups).Append("\n");
            sb.Append("  TotalDuplicateFiles: ").Append(TotalDuplicateFiles).Append("\n");
            sb.Append("  TotalPotentialPairs: ").Append(TotalPotentialPairs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="ManageDatabaseMrBones200ResponseBonedStats" />
    /// </summary>
    public class ManageDatabaseMrBones200ResponseBonedStatsJsonConverter : JsonConverter<ManageDatabaseMrBones200ResponseBonedStats>
    {
        /// <summary>
        /// Deserializes json to <see cref="ManageDatabaseMrBones200ResponseBonedStats" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override ManageDatabaseMrBones200ResponseBonedStats Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<int?> numInbox = default;
            Option<int?> numArchive = default;
            Option<int?> numDeleted = default;
            Option<int?> sizeInbox = default;
            Option<int?> sizeArchive = default;
            Option<int?> sizeDeleted = default;
            Option<int?> earliestImportTime = default;
            Option<List<int>?> totalViewtime = default;
            Option<int?> totalAlternateFiles = default;
            Option<int?> totalAlternateGroups = default;
            Option<int?> totalDuplicateFiles = default;
            Option<int?> totalPotentialPairs = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "num_inbox":
                            numInbox = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "num_archive":
                            numArchive = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "num_deleted":
                            numDeleted = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "size_inbox":
                            sizeInbox = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "size_archive":
                            sizeArchive = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "size_deleted":
                            sizeDeleted = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "earliest_import_time":
                            earliestImportTime = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "total_viewtime":
                            totalViewtime = new Option<List<int>?>(JsonSerializer.Deserialize<List<int>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "total_alternate_files":
                            totalAlternateFiles = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "total_alternate_groups":
                            totalAlternateGroups = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "total_duplicate_files":
                            totalDuplicateFiles = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "total_potential_pairs":
                            totalPotentialPairs = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (numInbox.IsSet && numInbox.Value == null)
                throw new ArgumentNullException(nameof(numInbox), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (numArchive.IsSet && numArchive.Value == null)
                throw new ArgumentNullException(nameof(numArchive), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (numDeleted.IsSet && numDeleted.Value == null)
                throw new ArgumentNullException(nameof(numDeleted), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (sizeInbox.IsSet && sizeInbox.Value == null)
                throw new ArgumentNullException(nameof(sizeInbox), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (sizeArchive.IsSet && sizeArchive.Value == null)
                throw new ArgumentNullException(nameof(sizeArchive), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (sizeDeleted.IsSet && sizeDeleted.Value == null)
                throw new ArgumentNullException(nameof(sizeDeleted), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (earliestImportTime.IsSet && earliestImportTime.Value == null)
                throw new ArgumentNullException(nameof(earliestImportTime), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (totalViewtime.IsSet && totalViewtime.Value == null)
                throw new ArgumentNullException(nameof(totalViewtime), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (totalAlternateFiles.IsSet && totalAlternateFiles.Value == null)
                throw new ArgumentNullException(nameof(totalAlternateFiles), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (totalAlternateGroups.IsSet && totalAlternateGroups.Value == null)
                throw new ArgumentNullException(nameof(totalAlternateGroups), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (totalDuplicateFiles.IsSet && totalDuplicateFiles.Value == null)
                throw new ArgumentNullException(nameof(totalDuplicateFiles), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (totalPotentialPairs.IsSet && totalPotentialPairs.Value == null)
                throw new ArgumentNullException(nameof(totalPotentialPairs), "Property is not nullable for class ManageDatabaseMrBones200ResponseBonedStats.");

            return new ManageDatabaseMrBones200ResponseBonedStats(numInbox, numArchive, numDeleted, sizeInbox, sizeArchive, sizeDeleted, earliestImportTime, totalViewtime, totalAlternateFiles, totalAlternateGroups, totalDuplicateFiles, totalPotentialPairs);
        }

        /// <summary>
        /// Serializes a <see cref="ManageDatabaseMrBones200ResponseBonedStats" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="manageDatabaseMrBones200ResponseBonedStats"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, ManageDatabaseMrBones200ResponseBonedStats manageDatabaseMrBones200ResponseBonedStats, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, manageDatabaseMrBones200ResponseBonedStats, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="ManageDatabaseMrBones200ResponseBonedStats" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="manageDatabaseMrBones200ResponseBonedStats"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, ManageDatabaseMrBones200ResponseBonedStats manageDatabaseMrBones200ResponseBonedStats, JsonSerializerOptions jsonSerializerOptions)
        {
            if (manageDatabaseMrBones200ResponseBonedStats.TotalViewtimeOption.IsSet && manageDatabaseMrBones200ResponseBonedStats.TotalViewtime == null)
                throw new ArgumentNullException(nameof(manageDatabaseMrBones200ResponseBonedStats.TotalViewtime), "Property is required for class ManageDatabaseMrBones200ResponseBonedStats.");

            if (manageDatabaseMrBones200ResponseBonedStats.NumInboxOption.IsSet)
                writer.WriteNumber("num_inbox", manageDatabaseMrBones200ResponseBonedStats.NumInboxOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.NumArchiveOption.IsSet)
                writer.WriteNumber("num_archive", manageDatabaseMrBones200ResponseBonedStats.NumArchiveOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.NumDeletedOption.IsSet)
                writer.WriteNumber("num_deleted", manageDatabaseMrBones200ResponseBonedStats.NumDeletedOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.SizeInboxOption.IsSet)
                writer.WriteNumber("size_inbox", manageDatabaseMrBones200ResponseBonedStats.SizeInboxOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.SizeArchiveOption.IsSet)
                writer.WriteNumber("size_archive", manageDatabaseMrBones200ResponseBonedStats.SizeArchiveOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.SizeDeletedOption.IsSet)
                writer.WriteNumber("size_deleted", manageDatabaseMrBones200ResponseBonedStats.SizeDeletedOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.EarliestImportTimeOption.IsSet)
                writer.WriteNumber("earliest_import_time", manageDatabaseMrBones200ResponseBonedStats.EarliestImportTimeOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.TotalViewtimeOption.IsSet)
            {
                writer.WritePropertyName("total_viewtime");
                JsonSerializer.Serialize(writer, manageDatabaseMrBones200ResponseBonedStats.TotalViewtime, jsonSerializerOptions);
            }
            if (manageDatabaseMrBones200ResponseBonedStats.TotalAlternateFilesOption.IsSet)
                writer.WriteNumber("total_alternate_files", manageDatabaseMrBones200ResponseBonedStats.TotalAlternateFilesOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.TotalAlternateGroupsOption.IsSet)
                writer.WriteNumber("total_alternate_groups", manageDatabaseMrBones200ResponseBonedStats.TotalAlternateGroupsOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.TotalDuplicateFilesOption.IsSet)
                writer.WriteNumber("total_duplicate_files", manageDatabaseMrBones200ResponseBonedStats.TotalDuplicateFilesOption.Value!.Value);

            if (manageDatabaseMrBones200ResponseBonedStats.TotalPotentialPairsOption.IsSet)
                writer.WriteNumber("total_potential_pairs", manageDatabaseMrBones200ResponseBonedStats.TotalPotentialPairsOption.Value!.Value);
        }
    }

    /// <summary>
    /// The ManageDatabaseMrBones200ResponseBonedStatsSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(ManageDatabaseMrBones200ResponseBonedStats))]
    public partial class ManageDatabaseMrBones200ResponseBonedStatsSerializationContext : JsonSerializerContext { }
}
